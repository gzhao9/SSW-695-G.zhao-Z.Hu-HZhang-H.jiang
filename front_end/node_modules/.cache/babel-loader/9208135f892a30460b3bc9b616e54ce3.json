{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\SSW-695-G.zhao-Z.Hu-HZhang-H.jiang\\\\front_end\\\\react_front_end\\\\src\\\\Pages\\\\FoodDetailPage\\\\FoodDetailPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Button, Form, Input, InputNumber, Switch, AutoComplete } from \"antd\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"../../Components/Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FoodDetailPage() {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const calorieRef = useRef();\n  const carboRef = useRef();\n  const proteinRef = useRef();\n  const fatRef = useRef();\n  const [options, setOptions] = useState([]);\n  const [manuallyInput, setManuallyInput] = useState(true);\n\n  const mockVal = function (str) {\n    let repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return {\n      value: str.repeat(repeat)\n    };\n  };\n\n  const onSearch = searchText => {\n    setOptions(!searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)]);\n  };\n\n  const onSelect = data => {\n    console.log(\"onSelect\", data);\n  };\n\n  function onFinish(values) {\n    console.log(\"Success:\", values);\n  }\n\n  function onFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  }\n\n  function switchManuallyInput(checked) {\n    setManuallyInput(!checked);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      headerText: \"Food Setting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      name: \"foodSetting\",\n      labelCol: {\n        span: 3\n      },\n      wrapperCol: {\n        span: 6\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          marginLeft: \"10%\",\n          marginRight: \"10%\"\n        },\n        label: \"Food Name\",\n        name: \"foodName\",\n        initialValue: state.foodInfo.food_name,\n        rules: [{\n          required: true,\n          message: \"Please input the food name!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n          options: options,\n          onSearch: onSearch,\n          onSelect: onSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          marginLeft: \"10%\",\n          marginRight: \"10%\"\n        },\n        label: \"Unit (g)\",\n        name: \"unit\",\n        initialValue: state.foodInfo.weight,\n        rules: [{\n          required: true,\n          message: \"Please input the food weight!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          style: {\n            float: \"left\"\n          },\n          min: 0,\n          max: 10000,\n          precision: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          marginLeft: \"10%\",\n          marginRight: \"10%\"\n        },\n        label: \"Manually Input\",\n        name: \"manuallyInput\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          style: {\n            float: \"left\"\n          },\n          onChange: switchManuallyInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          marginLeft: \"10%\",\n          marginRight: \"10%\"\n        },\n        label: \"Calorie (kcal)\",\n        name: \"calorie_rate\",\n        initialValue: state.foodInfo.calorie_rate,\n        rules: [{\n          required: true,\n          message: \"Please input the calorie!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          style: {\n            float: \"left\"\n          },\n          ref: calorieRef,\n          disabled: manuallyInput,\n          min: 0,\n          max: 10000,\n          precision: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          marginLeft: \"10%\",\n          marginRight: \"10%\"\n        },\n        label: \"Carbohydrate (g)\",\n        name: \"carbohydrate\",\n        initialValue: state.foodInfo.carbohydrate,\n        rules: [{\n          required: true,\n          message: \"Please input the carbohydrate!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          style: {\n            float: \"left\"\n          },\n          ref: carboRef,\n          disabled: manuallyInput,\n          min: 0,\n          max: 10000,\n          precision: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          marginLeft: \"10%\",\n          marginRight: \"10%\"\n        },\n        label: \"Protein (kcal)\",\n        name: \"protein\",\n        initialValue: state.foodInfo.protein,\n        rules: [{\n          required: true,\n          message: \"Please input the protein!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          style: {\n            float: \"left\"\n          },\n          ref: proteinRef,\n          disabled: manuallyInput,\n          min: 0,\n          max: 10000,\n          precision: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          marginLeft: \"10%\",\n          marginRight: \"10%\"\n        },\n        label: \"Fat (kcal)\",\n        name: \"fat\",\n        initialValue: state.foodInfo.fat,\n        rules: [{\n          required: true,\n          message: \"Please input the fat!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          style: {\n            float: \"left\"\n          },\n          ref: fatRef,\n          disabled: manuallyInput,\n          min: 0,\n          max: 10000,\n          precision: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 0,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          style: {\n            width: \"80%\",\n            height: \"50px\",\n            borderRadius: \"25px\",\n            bottom: \"20px\"\n          },\n          children: state.isAdd ? \"Add Food\" : \"Change Food Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodDetailPage, \"2Rz4zRq0ZLNmOAbtIaOaogszxds=\", false, function () {\n  return [useLocation];\n});\n\n_c = FoodDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodDetailPage\");","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/SSW-695-G.zhao-Z.Hu-HZhang-H.jiang/front_end/react_front_end/src/Pages/FoodDetailPage/FoodDetailPage.jsx"],"names":["React","useState","useRef","Button","Form","Input","InputNumber","Switch","AutoComplete","useLocation","Header","FoodDetailPage","state","calorieRef","carboRef","proteinRef","fatRef","options","setOptions","manuallyInput","setManuallyInput","mockVal","str","repeat","value","onSearch","searchText","onSelect","data","console","log","onFinish","values","onFinishFailed","errorInfo","switchManuallyInput","checked","span","marginLeft","marginRight","foodInfo","food_name","required","message","weight","float","calorie_rate","carbohydrate","protein","fat","offset","width","height","borderRadius","bottom","isAdd"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Button, Form, Input, InputNumber, Switch, AutoComplete } from \"antd\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Header from \"../../Components/Header/Header\";\r\n\r\nexport default function FoodDetailPage() {\r\n  const { state } = useLocation();\r\n  const calorieRef = useRef();\r\n  const carboRef = useRef();\r\n  const proteinRef = useRef();\r\n  const fatRef = useRef();\r\n\r\n  const [options, setOptions] = useState([]);\r\n  const [manuallyInput, setManuallyInput] = useState(true);\r\n\r\n  const mockVal = (str, repeat = 1) => ({\r\n    value: str.repeat(repeat),\r\n  });\r\n\r\n  const onSearch = (searchText) => {\r\n    setOptions(\r\n      !searchText\r\n        ? []\r\n        : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)]\r\n    );\r\n  };\r\n\r\n  const onSelect = (data) => {\r\n    console.log(\"onSelect\", data);\r\n  };\r\n\r\n  function onFinish(values) {\r\n    console.log(\"Success:\", values);\r\n  }\r\n\r\n  function onFinishFailed(errorInfo) {\r\n    console.log(\"Failed:\", errorInfo);\r\n  }\r\n\r\n  function switchManuallyInput(checked) {\r\n    setManuallyInput(!checked);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header headerText=\"Food Setting\" />\r\n      <Form\r\n        name=\"foodSetting\"\r\n        labelCol={{\r\n          span: 3,\r\n        }}\r\n        wrapperCol={{\r\n          span: 6,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          style={{ marginLeft: \"10%\", marginRight: \"10%\" }}\r\n          label=\"Food Name\"\r\n          name=\"foodName\"\r\n          initialValue={state.foodInfo.food_name}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input the food name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <AutoComplete\r\n            options={options}\r\n            onSearch={onSearch}\r\n            onSelect={onSelect}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          style={{ marginLeft: \"10%\", marginRight: \"10%\" }}\r\n          label=\"Unit (g)\"\r\n          name=\"unit\"\r\n          initialValue={state.foodInfo.weight}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input the food weight!\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            style={{ float: \"left\" }}\r\n            min={0}\r\n            max={10000}\r\n            precision={2}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          style={{ marginLeft: \"10%\", marginRight: \"10%\" }}\r\n          label=\"Manually Input\"\r\n          name=\"manuallyInput\"\r\n          valuePropName=\"checked\"\r\n        >\r\n          <Switch style={{ float: \"left\" }} onChange={switchManuallyInput} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          style={{ marginLeft: \"10%\", marginRight: \"10%\" }}\r\n          label=\"Calorie (kcal)\"\r\n          name=\"calorie_rate\"\r\n          initialValue={state.foodInfo.calorie_rate}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input the calorie!\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            style={{ float: \"left\" }}\r\n            ref={calorieRef}\r\n            disabled={manuallyInput}\r\n            min={0}\r\n            max={10000}\r\n            precision={2}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          style={{ marginLeft: \"10%\", marginRight: \"10%\" }}\r\n          label=\"Carbohydrate (g)\"\r\n          name=\"carbohydrate\"\r\n          initialValue={state.foodInfo.carbohydrate}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input the carbohydrate!\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            style={{ float: \"left\" }}\r\n            ref={carboRef}\r\n            disabled={manuallyInput}\r\n            min={0}\r\n            max={10000}\r\n            precision={2}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          style={{ marginLeft: \"10%\", marginRight: \"10%\" }}\r\n          label=\"Protein (kcal)\"\r\n          name=\"protein\"\r\n          initialValue={state.foodInfo.protein}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input the protein!\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            style={{ float: \"left\" }}\r\n            ref={proteinRef}\r\n            disabled={manuallyInput}\r\n            min={0}\r\n            max={10000}\r\n            precision={2}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          style={{ marginLeft: \"10%\", marginRight: \"10%\" }}\r\n          label=\"Fat (kcal)\"\r\n          name=\"fat\"\r\n          initialValue={state.foodInfo.fat}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input the fat!\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            style={{ float: \"left\" }}\r\n            ref={fatRef}\r\n            disabled={manuallyInput}\r\n            min={0}\r\n            max={10000}\r\n            precision={2}\r\n          />\r\n        </Form.Item>\r\n\r\n        <br />\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 0,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{\r\n              width: \"80%\",\r\n              height: \"50px\",\r\n              borderRadius: \"25px\",\r\n              bottom: \"20px\",\r\n            }}\r\n          >\r\n            {state.isAdd ? \"Add Food\" : \"Change Food Info\"}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}